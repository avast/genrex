[tool.poetry]
name = "genrex-py"
version = "1.0.0"
description = "GenRex is a tool that generates regular expressions from strings such as artifacts dynamically generated by samples."
authors = ["Dominika Regéciová <Dominika.Regeciova@gendigital.com>"]
maintainers = ["Dominika Regéciová <Dominika.Regeciova@gendigital.com>"]
readme = "README.md"
license = "MIT"
include = ["py.typed", "LICENSE"]

packages = [
	{ include = "genrex" }
]

[tool.poetry.dependencies]
python = "^3.10"

[tool.poetry.dev-dependencies]
black = "^24.2.0"
isort = "^5.10.1"
mypy = "^1.3.0"
poethepoet = "^0.24.0"
pytest = "^8.0.0"
pytest-black = "^0.3.12"
pytest-isort = "^3.1.0"
pytest-cov = "^4.0.0"
pytest-mock = "^3.10.0"
pytest-mypy = "^0.10.3"
requests-mock = "^1.10.0"
pytest-pylint = "^0.21.0"
pylint = "^3.0.3"
types-requests = ">=0.1.8,<3.0.0"
types-tabulate = ">=0.1.0,<0.9.1"
ruff = "^0.2.1"
pytest-ruff = "^0.2.1"

[tool.poe.tasks]
_black = "black genrex/ tests/"
_isort = "isort genrex/ tests/"
_black_check = "black --check genrex/ tests/"
_isort_check = "isort --check genrex/ tests/"
format = ["_isort", "_black"]
format-check = ["_isort_check", "_black_check"]
test = "pytest -vvv --mypy --ruff --pylint --pylint-rcfile=pyproject.toml --cov=genrex --cov-report=term-missing -l genrex/ tests/"


[tool.isort]
profile = "black"

[tool.pylint.master]
max-line-length = 120
disable = [
    "logging-fstring-interpolation",
    "missing-class-docstring",
    "missing-function-docstring",
    "missing-module-docstring",
    "no-else-continue",
    "no-else-return",
    "too-few-public-methods",
    "too-many-arguments",
    "too-many-return-statements",
    "too-many-public-methods",
    "too-many-lines",
    "too-many-branches",
    "attribute-defined-outside-init",
    "too-many-nested-blocks",
    "too-many-branches",
    "too-many-locals",
    "too-many-function-args"
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
